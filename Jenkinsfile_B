pipeline 
{
    agent any
    stages{
        stage('Static'){
            steps{
                echo 'STATIC STAGE'
                bat '''
                    SET PYTHONPATH=%WORKSPACE%
                    flake8 --exit-zero --format=pylint app >flake8.out
                '''
                recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]]
            }
        }
        stage('Security'){
            steps{
                echo 'SECURITY STAGE'
                bat '''
                    bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: {severity}: {test_id}: {msg}"    
                '''
                recordIssues tools: [pyLint(name: 'Flake8', pattern: 'bandit.out')], qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true], [threshold: 4, type: 'TOTAL', unstable: false]]
            }
        }
        stage('Unit'){
            steps{
                echo 'UNIT STAGE'
                catchError(buildResult:'SUCCESS',stageResult:'SUCCESS'){
                    bat '''
                        coverage run --source=app --omit=app\\__init__.py,app\\api.py -m pytest --junitxml=result-unit.xml test\\unit                       
                    ''' 
                }
            }
        } 
        stage('Rest'){
            steps{
                echo 'REST STAGE'
                catchError(buildResult:'SUCCESS',stageResult:'SUCCESS'){
                    bat '''
                        set FLASK_APP = app\\api.py
                        start flask run
                        start java -jar C:\\Unir\\wiremock-standalone-3.5.3.jar --port 9090 --root-dir test\\wiremock
                        pytest --junitxml=result-rest.xml test\\rest
                        junit 'result*.xml'
                    '''   
                }
            }
        }
        stage('Cobertura'){
            steps{
                echo 'COBERTURA STAGE'
                bat '''
                    coverage xml
                '''
                catchError(buildResult:'UNSTABLE',stageResult:'FAILURE'){
                    cobertura coberturaReportFile: 'coverage.xml', onlyStable: false, failUnstable:false, conditionalCoverageTargets: '90,80,80', lineCoverageTargets:'95,85,85'
                }
            }
        }
        stage('Performance'){
            steps{
                echo 'PERFORMANCE STAGE'
                catchError(buildResult:'UNSTABLE',stageResult:'FAILURE'){
                    bat '''
                        C:\\Unir\\apache-jmeter-5.6.3\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl
                    '''
                    perfReport sourceDataFiles: 'flask.jtl'
                }
            }
        }
    }
}